test <- strsplit(abt,' ')[[1]]
test[test != ""]
head(abt)
test <- strsplit(abt[6],' ')[[1]]
test[test != ""]
test <- strsplit(abt[6],' ')
test[test != ""]
test[test != ""]
test[test != ""]
test <- strsplit(abt[6],' ')
test
test[test != ""]
test <- test[test != ""]
test
q <- tapply(allWords,allWords, length) #counting words
gsub(string_to_change,replacement,input_vector,fixed=TRUE) #removing punctuation
awNoPers[17]
awNoPers <- gsub('.','',allWords,fixed=TRUE)# (string_to_change,replacement,input_vector,fixed=TRUE)
awNoPers[17]
download.file('https://archive.ics.uci.edu/ml/machine-learning-databases/00275/Bike-Sharing-Dataset.zip','bike.zip')
unzip('bike.zip')  # out come the files 'day.csv' and 'hour.csv'
day <- read.csv('day.csv',header=TRUE)}
day <- read.csv('day.csv',header=TRUE)
head(day)  # always take a look around!
day1 <- day[,c(8,10,12:14)]
lmout <- lm(casual~.,data=day1)
day1$temp2 <- temp^2 #quadratic temperature
lmout
day1$temp2 <- temp^2 #quadratic temperature
day1$temp2 <- day1$temp^2 #quadratic temperature
c(day1$temp,day1$temp2)
head(c(day1$temp,day1$temp2))
cbind(day1$temp,day1$temp2)
head(day)
hds <- day$dteday[day$holiday==1]
head(hds)
class(hds)
hd <- as.Date(hds)
hp <- as.POSIXlt(hd)
hp[15]$wday #What Day is 3/7/12?
hp[15]$wday #What Day was 4th of July 2012? 3 means wed
hp[15]$wday #What Day was 4th of July 2012? 3 means wed
hp[16]$wday #What Day was 4th of July 2012? 3 means wed
##########while
str(airpass)
str(airpass)
##########while
airpass <- AirPassengers
str(airpass)
head(Nile)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytuesdayR)
#reading these datasets...
setwd("C:/Users/umagl/Downloads/legos")
getwd()
dir("legos", full.names = TRUE) %>%
map(read_csv)
#reading these datasets...
setwd("C:/Users/umagl/Downloads/legos")
```{r setup, include=FALSE}
#reading these datasets...
{r setup, include=FALSE}
#reading these datasets...
#reading these datasets...
{r setup, include=FALSE}
{r setup, include=FALSE}
{r setup, include=FALSE}
{r setup, include=FALSE}
{r setup, include=FALSE, echo=FALSE}
dir("legos", full.names = TRUE) %>%
map(read_csv)
{r setup, include=FALSE, echo=FALSE}
setwd("C:/Users/umagl/Downloads/legos")
getwd()
getwd()
dir("legos", full.names = TRUE) %>%
map(read_csv)
{r setup, include=FALSE, echo=FALSE}
{r setup, include=FALSE, echo=FALSE}
require("knitr")
opts_knit$set(root.dir = "~/path/to/folder/")
{r setup, include=FALSE, echo=FALSE}
setwd("C:/Users/umagl/Downloads/legos")
getwd()
dir("legos", full.names = TRUE) %>%
map(read_csv)
{r setup, include=FALSE, echo=FALSE}
rstudioapi::addTheme("https://raw.githubusercontent.com/jnolis/synthwave85/master/Synthwave85.rstheme", TRUE, TRUE, FALSE)
rstudioapi::removeTheme("Synthwave85")
install.packages(
"rsthemes",
repos = c(gadenbuie = 'https://gadenbuie.r-universe.dev', getOption("repos"))
)
rsthemes::list_rsthemes
rsthemes::try_rsthemes()
rsthemes::install_rsthemes()
rsthemes::try_rsthemes()
n
list_rsthemes()
rsthemes::list_rsthemes()
rsthemes::try_rsthemes()
n
use_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::set_theme_favorite()
rsthemes::use_theme_favorite()
rsthemes::set_theme_favorite("Flat White {rsthemes}", "Horizon Dark {rsthemes}","Night Owl {rsthemes}","Nord Polar Night Aurora {rsthemes}", "Serendipity Dark {rsthemes}", "Solarized Dark {rsthemes}", "Solarized Light {rsthemes}", "Yule RStudio {rsthemes")
rsthemes::set_theme_favorite(c("Flat White {rsthemes}", "Horizon Dark {rsthemes}","Night Owl {rsthemes}","Nord Polar Night Aurora {rsthemes}", "Serendipity Dark {rsthemes}", "Solarized Dark {rsthemes}", "Solarized Light {rsthemes}", "Yule RStudio {rsthemes"))
rsthemes::set_theme_favorite(c("Flat White {rsthemes}", "Horizon Dark {rsthemes}","Night Owl {rsthemes}","Nord Polar Night Aurora {rsthemes}", "Serendipity Dark {rsthemes}", "Solarized Dark {rsthemes}", "Solarized Light {rsthemes}", "Yule RStudio {rsthemes}"))
::edit_r_profile()
rsthemes::::edit_r_profile()
rsthemes::edit_r_profile()
usethis::edit_r_profile()
rsthemes::try_rsthemes()
usethis::edit_r_profile(
)
rsthemes::try_rsthemes()
library(tidyverse)
library(tidytuesdayR)
library(scales)
#doesn't work
tt <- tt_load("2022-09-06")
#so I will read it manually
inventories <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-06/inventories.csv.gz')
inventory_sets <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-06/inventory_sets.csv.gz', show_col_types = FALSE)
sets <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-06/sets.csv.gz')
inventories
#counting the sets
inventories %>%
count(set_num, sort=TRUE)
#this links sets to ids
inventory_sets
#downloading more data from https://rebrickable.com/downloads/
#reading these datasets...
setwd("C:/Users/umagl/Downloads/legos")
getwd()
a <- tibble(file = dir("C:/Users/umagl/Downloads/legos", full.names= TRUE))  #just "legos" as dir doesn't work!
a
mutate(a, data = map(file, read_csv))  #reading them
b <- mutate(a, data = map(file, read_csv))  #reading them
b
c <- extract(b, file,"name", "legos/(.*).csv.gz")  #pulling out the relevant part of the name
c
d <-  deframe(c)
d
lego_datasets
lego_datasets <- tibble(file = dir("C:/Users/umagl/Downloads/legos", full.names= TRUE)) %>% #just "legos" as dir doesn't work!
mutate(data = map(file, read_csv)) %>% #reading them
extract(file,"name", "legos/(.*).csv.gz") %>% #pulling out the relevant part of the name
deframe() #turns it into a list
lego_datasets
lego_datasets$sets
#the lego sets start around the 40s
theme_set(theme_light())
a <- lego_datasets$sets %>%
count(year)
a
#the lego sets start around the 40s
theme_set(theme_light())
lego_datasets$sets %>%
count(year) %>%
ggplot(aes(year,n)) + #n is the frequency from count(year)
geom_col() +
labs(y = "# of LEGO sets")
a <- lego_datasets$sets %>%
group_by(name)
a
a <- summarize(a,n_sets = n(),
year_first = min(year),
year_last = last(year)) %>%
a
a <- summarize(a,n_sets = n(),
+                year_first = min(year),
b <- summarize(a, n_sets = n(),
year_first = min(year),
year_last = last(year))
b
a
#most produced sets, over time
lego_datasets$sets %>%
group_by(name) %>%
summarize(n_sets = n(),
year_first = min(year),
year_last = last(year)) %>%
arrange(desc(n_sets)) %>%
View()
lego_datasets$themes
lego_datasets$sets
lego_datasets$themes %>%
select(id, theme_name = name)
lego_datasets$themes
lego_datasets$sets
b <- left_join(lego_datasets$sets, a,
by = c(theme_id = "id"))
a <- lego_datasets$themes %>%
select(id, theme_name = name)
b <- left_join(lego_datasets$sets, a,
by = c(theme_id = "id"))
sets_themes <- lego_datasets$sets %>%
left_join(lego_datasets$themes %>%
select(id, theme_name = name),
by = c(theme_id = "id"))
a <- lego_datasets$themes %>%
select(id, theme_name = name)
a
b <- left_join(lego_datasets$sets, a,
by = c(theme_id = "id"))
b
a
#joining themes and sets
sets_themes <- lego_datasets$sets %>%
left_join(lego_datasets$themes %>%
select(id, theme_name = name),
by = c(theme_id = "id"))
sets_themes
lego_datasets$se
sets_themes
#joining themes and sets
sets_themes <- lego_datasets$sets %>%
left_join(lego_datasets$themes %>%
select(id, theme_name),
by = c(theme_id = "id"))
lego_datasets$themes
#plotting the themes by number of sets
sets_themes %>%
count(theme_name, sort = TRUE) %>%
head(20) %>%
mutate(theme_name = fct_reorder(theme_name, n)) %>%
ggplot(aes(n, theme_name)) +
geom_col() +
labs(x = '# of sets',
y = 'Theme',
title = "Most popular LEGO themes")
a <- sets_themes %>%
count(theme_name, sort = TRUE) %>%
head(20)
a
b <- mutate(a, theme_name = fct_reorder(theme_name, n))
b
?fct_reorder
b <- mutate(a, theme_name = fct_reorder2(theme_name, n))
b <- mutate(a, theme_name = fct_reorder(n, theme_name))
theme_name, n
b
#plotting the themes by number of sets
sets_themes %>%
count(theme_name, sort = TRUE) %>%
head(20) %>%
mutate(theme_name = fct_reorder(theme_name, n)) %>% #theme_name as factor
ggplot(aes(n, theme_name)) +
geom_col() +
labs(x = '# of sets',
y = 'Theme',
title = "Most popular LEGO themes")
#something is wrong, the median n. of parts is 0 for some themes
group_by(sets_themes, theme_name) %>%
summarize(median(num_parts))
#there are more than 3000 sets with 0 parts
#probably the NAs were inserted as 0s
sets_themes %>%
filter(num_parts == 0)
#0s to NAs
sets_themes <- sets_themes %>%
mutate(num_parts = na_if(num_parts, 0))
#star wars sets are quite complex
by_theme <- sets_themes %>%
group_by(theme_name) %>%
summarize(n_sets = n(),
median_parts = median(num_parts, na.rm = TRUE)) %>% #instead of mean, to avoid skewed results
arrange(desc(n_sets))
by_theme
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name), hjust = 1, vjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
expand_limits(x = 50) #to fully see the labels
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name), hjust = 1, vjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
scale_x_log10() +
expand_limits(x = 50) #to fully see the labels
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name), hjust = 1, vjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
scale_x_log10() #to fully see the labels
+
expand_limits(x = 50)
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name), hjust = 1, vjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
scale_x_log10() +
expand_limits(x = 50) #to fully see the labels
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name),  vjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
scale_x_log10() +
expand_limits(x = 50) #to fully see the labels
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name), hjust = 1, vjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
scale_x_log10() +
expand_limits(x = 50) #to fully see the labels
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name), hjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
scale_x_log10() +
expand_limits(x = 50) #to fully see the labels
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name), hjust = 1, vjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
expand_limits(x = 50) #to fully see the labels
scale_x_log10() +
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name), hjust = 1, vjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
scale_x_log10() +
expand_limits(x = 50) #to fully see the labels
#are the most produced themes also the ones with more parts?
by_theme %>%
filter(n_sets >= 90) %>%
ggplot(aes(n_sets, median_parts)) +
geom_point() +
geom_text(aes(label = theme_name), hjust = 1, vjust = 1,
check_overlap = TRUE) +
scale_y_log10() + #rescaling y-axis to see more clearly the median parts
scale_x_log10() +
expand_limits(x = 50) #to fully see the labels
#!!! role play (...) first with median=NA; different order than in the video
na.omit(by_theme) %>%
head(25) %>%
mutate(theme_name = fct_reorder(theme_name, median_parts)) %>%
ggplot(aes(median_parts,theme_name)) +
geom_col()
#visualized...
na.omit(by_theme) %>%
head(25) %>%
ggplot(aes(median_parts,theme_name)) +
geom_col()
na.omit(by_theme) %>%
head(25)
#visualized...
na.omit(by_theme) %>%
head(25) %>%
mutate(theme_name = fct_reorder(theme_name, median_parts)) %>%
ggplot(aes(median_parts,theme_name)) +
geom_col()
a <- sets_with_themes %>%
head(25)
a <- sets_themes %>%
head(25)
a <- sets_themes %>%
head(25)
b <- filter(sets_themes,
fct_lump(theme_name,25) != "Other")
a
b
a
head(b)
View(b)
b <- fct_lump(sets_themes$theme_name,25)
b
#boxplot distributions
sets_themes %>%
filter(fct_lump(theme_name, 25) != "Other" ) %>%
mutate(theme_name = fct_reorder(theme_name, num_parts, na.rm = TRUE))%>%
ggplot(aes(num_parts, theme_name)) +
geom_boxplot()
#visualized...
na.omit(by_theme) %>%
head(25) %>%
mutate(theme_name = fct_reorder(theme_name, median_parts)) %>%
ggplot(aes(median_parts,theme_name)) +
geom_col() +
labs(title = "Most complex LEGO themes",
y= "",
x= "# of parts")
#boxplot distributions
sets_themes %>%
filter(fct_lump(theme_name, 25) != "Other" ) %>%
mutate(theme_name = fct_reorder(theme_name, num_parts, na.rm = TRUE))%>%
ggplot(aes(num_parts, theme_name)) +
geom_boxplot() +
scale_x_log10() +
labs(title = "Most complex LEGO themes",
y= "",
x= "# of parts")
#boxplot distributions
na.omit(sets_themes) %>%
filter(fct_lump(theme_name, 25) != "Other" ) %>%
mutate(theme_name = fct_reorder(theme_name, num_parts, na.rm = TRUE))%>%
ggplot(aes(num_parts, theme_name)) +
geom_boxplot() +
scale_x_log10() +
labs(title = "Most complex LEGO themes",
y= "",
x= "# of parts")
#boxplot distributions
na.omit(sets_themes) %>%
filter(fct_lump(theme_name, 25) != "Other" ) %>%
mutate(theme_name = fct_reorder(theme_name, num_parts))%>%
ggplot(aes(num_parts, theme_name)) +
geom_boxplot() +
scale_x_log10() +
labs(title = "Most complex LEGO themes",
y= "",
x= "# of parts")
a <- by_theme %>%
head(25) %>%
mutate(theme_name = fct_reorder(theme_name, median_parts))
a
b <- sets_themes %>%
filter(fct_lump(theme_name, 25) != "Other" ) %>%
mutate(theme_name = fct_reorder(theme_name, num_parts))%>%
b
b
head(b)
View(a)
b <- sets_themes %>%
filter(fct_lump(theme_name, 25) != "Other" ) %>%
mutate(theme_name = fct_reorder(theme_name, num_parts))
b
a
b
group_by(sets_themes, decade= 10 * floor(year %% 10))
a <- group_by(sets_themes, decade= 10 * floor(year %% 10))
a
floor(sets_themes$year%%10)
?floor
#are the sets becoming more complicated over-time?
sets_themes %>%
group_by(decade = 10*(year %% 10)) %>%
summarize(n_sets= n(),
median_num_parts = median(num_parts, na.rm = TRUE))
#are the sets becoming more complicated over-time?
sets_themes %>%
group_by(decade = 10 * floor(year %% 10)) %>%
summarize(n_sets= n(),
median_num_parts = median(num_parts, na.rm = TRUE))
head(sets_themes)
#are the sets becoming more complicated over-time?
sets_themes %>%
group_by(decade = 10 * floor(year/10)) %>%
summarize(n_sets= n(),
median_num_parts = median(num_parts, na.rm = TRUE))
lego_datasets$inventories
lego_datasets$inventories %>%
arrange(desc(version)) %>%
distinct(set_num, .keep_all = TRUE)
lego_datasets$inventories %>%
arrange(desc(version)) %>%
distinct(set_num)
inventories_current <- lego_datasets$inventories %>%
arrange(desc(version)) %>%
distinct(set_num, .keep_all = TRUE)
inventories_current
lego_datasets$inventory_parts
inventories
inventories_sub <- lego_datasets$inventories %>%
distinct(set_num, .keep_all = TRUE) %>%
select(inventory_id = id, set_num)
inventories_sub
sets_parts <- sets_themes %>%
inner_join(inventories_sub, by = "set_num") %>%
inner_join(lego_datasets$inventory_parts, by = "inventory_id",
suffix = c("", "_inventory"))
View(sets_parts)
?inner_join
